<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<script name="XMC2IB-first-once">
    <auditLogEnabled></auditLogEnabled>
    <cacheDate>1542271200820</cacheDate>
    <category>,Integrations,</category>
    <comments>XMC integration with Infoblox - run once</comments>
    <content># @METADATASTART
#@DetailDescriptionStart
################################################################
# System Script
#
# Script        : Create the Extensible Attributes at Infoblox
#               : Select your Infoblox instance
#               : run the script
# Revision      : 1.0
# Last updated  : 15.11.2018
# Purpose       : Create necessary extensible attributes for the integration
################################################################
#@DetailDescriptionEnd

# @SectionStart (description = Infoblox access)
################################################################################
# username
################################################################################
# @VariableFieldLabel (description = "Username:",
#    name       = varUsername,
#    type       = String,
#    scope      = global,
#    required   = yes
#    value      = "admin"
#    )

################################################################################
# password
################################################################################
# @VariableFieldLabel (description = "Password:",
#      name        = varPassword,
#      type        = String,
#      scope       = global,
#      required    = yes
#      value       = "infoblox"
#    )

################################################################################
# port
################################################################################
# @VariableFieldLabel (description = "Port:",
#      name        = varInfoBloxPort,
#      type        = Integer,
#      scope       = global,
#      required    = yes
#      value       = 443
#    )

# @SectionEnd
# @MetaDataEnd

import requests, json, sys, argparse, logging
from requests.auth import HTTPBasicAuth

varDebug = False
varInfoBloxIP = emc_vars["deviceIP"]
varUsername = emc_vars["varUsername"]
varPassword = emc_vars["varPassword"]
varInfoBloxPort = emc_vars["varInfoBloxPort"]
varDebugFile = 'XMC2IB-once.log'

#########################################
##### Custom tuning above not below #####
#########################################

varAttrStatus = "XMC Status"
varAttrAuth = "XMC Authentication Type"
varAttrSwitchIP = "XMC Switch IP"
varAttrSwitchPort = "XMC Switch Port"
varAttrSwitchLocation = "XMC Switch Location"
varAttrProfile = "XMC Profile"
varAttrUser = "XMC User Name"
varAttrReason = "XMC Reason"
varAttrTimeStamp = "XMC Updated"

##########################################################
##### Values above must match those in XMC2IB script #####
##########################################################

if varDebug:
    logging.basicConfig(filename=varDebugFile,level=logging.DEBUG)

varURL = 'https://'+varInfoBloxIP+':'+varInfoBloxPort+'/wapi/v2.7/extensibleattributedef'
if varDebug:
    logging.debug ("POSTing URL: "+varURL)

varHeaders = {'Content-Type': 'application/json'}
if varDebug:
    logging.debug ("POSTing headers: "+str(varHeaders))

for i in varAttrStatus,varAttrAuth,varAttrSwitchIP,varAttrSwitchPort,varAttrSwitchLocation,varAttrProfile,varAttrUser,varAttrReason,varAttrTimeStamp:
    varData = '{"name":"'+i+'","type":"STRING","comment":"Extreme Control","allowed_object_types":["FixedAddress","HostRecord"]}'
    if varDebug:
        logging.debug ("POSTing data: "+varData)

    # call the API to create extensible attribute
    print ("###############################")
    print ("#Ignore following SSL warning #")
    print ("###############################")
    try:
        myResponse = requests.post(varURL, auth = HTTPBasicAuth(varUsername, varPassword), verify = False, data = varData, headers = varHeaders)
    except requests.exceptions.RequestException as e:
        print ("###############################")
        print ("#Error!#")
        print ("###############################")
        logging.error (e)
        sys.exit("RequestException")

    if varDebug:
        logging.debug ("response:"+myResponse.text)

    if myResponse.status_code != requests.codes.created:
        print ("###############################")
        print ("#Error!#")
        print ("###############################")
        logging.warning ("ERROR communicating to InfoBlox "+str(myResponse.status_code)+myResponse.text)
        sys.exit("ERROR communicating to InfoBlox")

print ("#################")
print ("## Be Extreme! ##")
print ("#################")

#################
## Be Extreme! ##
#################</content>
    <creationDate>1542266366528</creationDate>
    <creator>root</creator>
    <defaultCategory></defaultCategory>
    <devicesRequired>true</devicesRequired>
    <contexts></contexts>
    <id>189</id>
    <lastUpdateDate>1542271200790</lastUpdateDate>
    <lastUpdatedBy>root</lastUpdatedBy>
    <metaDataPath>/usr/local/Extreme_Networks/NetSight/appdata/scripting/overrides/XMC2IB-first-once.xml</metaDataPath>
    <miscXMLData></miscXMLData>
    <nosIds></nosIds>
    <postprocessScript></postprocessScript>
    <rollbackScript></rollbackScript>
    <saveConfigOnExit>false</saveConfigOnExit>
    <scriptOwner></scriptOwner>
    <scriptPath>/usr/local/Extreme_Networks/NetSight/appdata/scripting/overrides/XMC2IB-first-once.py</scriptPath>
    <scriptTimeout>60</scriptTimeout>
    <scriptType>Python</scriptType>
    <supprotedGroups></supprotedGroups>
    <roles>,NetSight Administrator,</roles>
    <vendor></vendor>
    <version>0</version>
</script>

